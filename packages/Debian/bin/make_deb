#!/bin/bash

set -e

usage="$(basename "$0") {x86|arm}
This script is used to create the Debian package as the
PostgreSQL Storage Plugin of FogLAMP.

Arguments: 
 x86 - Build an x86_64 package
 arm - Build an armv7l package"

## TODO: Use a good way to identify the GIT_ROOT directory
GIT_ROOT="${HOME}/storage-postgres"

version=`head -1 ${GIT_ROOT}/version`
BUILD_ROOT="${GIT_ROOT}/packages/Debian/build"

case "$1" in
    x86)
        platform="x86_64"
        ;;
    arm)
        platform="armv7l"
        echo "Build ARM"
        exit 0
        ;;
    *)
        echo "${usage}"
        exit 1
        ;;
esac

echo "The platform is set as ${platform}"

# Final package name
package_name="foglamp-storage-postgres-${version}-${platform}"
echo "The package name is ${package_name}"

# Create the package directory. If a directory with the same name exists,
# it is copied with a version number.
cd "${BUILD_ROOT}"
existing_pkgs=`find . -maxdepth 1 -name "${package_name}.????" | wc -l`
existing_pkgs=$((existing_pkgs+1))
new_stored_pkg=$(printf "${package_name}.%04d" "${existing_pkgs}")
if [ -d "${package_name}" ]; then
    echo "Saving the old working environment as ${new_stored_pkg}"
    mv "${package_name}" "${new_stored_pkg}"
fi
mkdir "${package_name}"

# Populate the package directory with Debian files and PostgreSQL Files
echo -n "Populating the package..."
cd "${package_name}"
cp -R ${GIT_ROOT}/packages/Debian/DEBIAN_import/${platform}/* .

mkdir -p usr/local/foglamp/plugins/storage/postgres/pgsql
cd usr/local/foglamp/plugins/storage/postgres/pgsql
cp -R ${GIT_ROOT}/pgsql-${platform}/* .
echo "Done."

# Add customised files
echo -n "Adding FogLAMP customization..."

cp -R ${GIT_ROOT}/share .
cd ${BUILD_ROOT}/${package_name}/usr/local/foglamp/plugins/storage/postgres
mkdir bin
cp ${GIT_ROOT}/scripts/* bin/.
echo "Done."

# Build the package
cd "${BUILD_ROOT}"

# Save the old versions
existing_pkgs=`find . -maxdepth 1 -name "${package_name}.deb.????" | wc -l`
existing_pkgs=$((existing_pkgs+1))
new_stored_pkg=$(printf "${package_name}.deb.%04d" "${existing_pkgs}")

if [ -e "${package_name}.deb" ]; then
    echo "Saving the old package as ${new_stored_pkg}"
    mv "${package_name}.deb" "${new_stored_pkg}"
fi

echo "Building the new package..."
dpkg-deb --build ${package_name}
echo "Building Complete."


exit 0
